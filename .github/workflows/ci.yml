# Currently Windows only validates Java LTS version
# Send the coverage of Java LTS version on Linux to Cadacy
name: CI
on:
  push:
  pull_request:
    types:
      - opened
      - edited
  schedule:
    - cron: '16 11 * * 1'
jobs:
  ##########################################################################
  ## Although use for evaluation purposes, most checks are included in LGTM.
  ## Run only on master to save time.
  analyze:
    if: github.ref == 'refs/heads/master'
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
    - name: Set up java
      if: contains(matrix.language, 'java')
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.10
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  ##########################################################################
  verify-lts:
    name: Verify with JDK 11.0.10 on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.10
      - name: Set up ffmpeg
        id: ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2 
      - name: Create coverage
        id: create-coverage
        if: contains(matrix.os, 'ubuntu-latest')
        run: mvn -Punit-test -Psend-coverage -Ptomcat-embed -DfailIfNoTests=false -DtranscodePath="${{ steps.ffmpeg.outputs.path }}" clean test jacoco:report
      - name: Archive code coverage
        if: "(steps.create-coverage.conclusion == 'success' && contains(matrix.os, 'ubuntu-latest')) && (github.ref == 'refs/heads/master' || contains(github.ref, 'snapshot'))"
        uses: actions/upload-artifact@v2
        with:
          name: Code coverage report
          path: jpsonic-main/target/site/jacoco
          retention-days: 7
      - name: Verify with Maven on Win
        if: contains(matrix.os, 'windows-latest')
        run: mvn -DfailIfNoTests=false -DtranscodePath="${{ steps.ffmpeg.outputs.path }}" clean verify -B -Ptomcat-embed -Punit-test
  ##########################################################################
  send-coverage:
    name: Send coverage to Codacy
    needs: verify-lts
    if: "(github.ref == 'refs/heads/master' || contains(github.ref, 'snapshot'))"
    env:
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      GITHUB_SHA: ${{ github.sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.10
      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: Code coverage report
      - name: Send Jacoco report
        run: mvn -Psend-coverage com.gavinmogan:codacy-maven-plugin:coverage
  ##########################################################################
  verify-experiment:
    name: Verify with JDK ${{ matrix.java }} on ubuntu-latest
    strategy:
      matrix:
        java: [ 12, 13, 14, 15 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Set up ffmpeg
        id: ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2 
      - name: Verify with Maven
        run: mvn -DtranscodePath="${{ steps.ffmpeg.outputs.path }}" clean verify -B -Ptomcat-embed -Prelease${{ matrix.java }} -Punit-test
  ##########################################################################
  package:
    if: github.ref == 'refs/heads/master'
    needs: [ verify-lts, verify-experiment ]
    name: Package with JDK ${{ matrix.java }} on ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 12, 13, 14, 15 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Configure GPG Key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          mkdir -p ~/.gnupg/
          chmod 700 ~/.gnupg
          printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
          chmod 600 ~/.gnupg/*
          gpg --quiet --import ~/.gnupg/private.key
      - name: Create jetty.war
        run: |
          mvn clean package -Dmaven.test.skip=true -Dpmd.skip=true -Pjetty-embed -Prelease${{ matrix.java }}
          gpg2 --clearsign jpsonic-main/target/artifacts-checksums.sha
      - name: Copy README
        # Due to the specifications of actions/upload-artifact@v2.
        # When loading different hierarchies of artifacts, each directory is created.
        run: cp install/keys/README.txt jpsonic-main/target
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: jpsonic-jetty-embedded-for-jdk${{ matrix.java }}-${{ steps.date.outputs.date }}
          path: |
            jpsonic-main/target/jpsonic.war
            jpsonic-main/target/artifacts-checksums.sha.asc
            jpsonic-main/target/README.txt
          retention-days: 90
