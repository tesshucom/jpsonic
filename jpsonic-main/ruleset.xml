<?xml version="1.0"?>
<ruleset name="Jpsonic Custom Rules Priority3"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        PMD 6.28.0 rulesets for Jpsonic.

		[Priority level value controllable by Maven / Logical name in Eclipse plug-in]

        priority 1 / blocker   : Almost follow default rules
        priority 2 / critical  : Almost follow default rules
        priority 3 / urgent    : only important rules
        priority 4 / important : only important rules
        priority 5 / warning   : only important rules

        - There is a rule that is not an error but has an influence on the server operation.
          Purpose is to triage such rules.
        - Rules are expressed as exclusions rather than postscripts.
          It is easy to re-evaluate new rules when upgrading PMD.
        - Readability rules in priority 3 are basically discarded.
          (Readability rules for priority 1 and 2 are reasonable and should be followed.)
        - Rules in priority 4, 5 are basically discarded.
          However, this hierarchy has a large number of cases but is easy, so may be fixed quickly.
          (Some tools, such as codacy, have no control over their priorities.
          In this hierarchy, fix are more effective than adding many suppression rules.)

    </description>

    <exclude-pattern>.*/.*Test*.java</exclude-pattern>
    <exclude-pattern>.*/.*TestCase*.java</exclude-pattern>
    <exclude-pattern>.*/.*DaoTestCaseBean2.java</exclude-pattern>
    <exclude-pattern>.*/.*TestData*.java</exclude-pattern>
    <exclude-pattern>.*/.*TestUtils*.java</exclude-pattern>
    <include-pattern>.*/src/main/java/.*.java</include-pattern>
    <include-pattern>.*/src/main/webapp/WEB-INF/jsp/.*.jsp</include-pattern>

    <rule ref="category/java/bestpractices.xml">

        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="MissingOverride" />
        <exclude name="UseCollectionIsEmpty" />
        <exclude name="LooseCoupling" />
        <exclude name="UnusedPrivateField" />
        <exclude name="AccessorClassGeneration" />
        <exclude name="JUnitTestContainsTooManyAsserts" />
        <exclude name="JUnitAssertionsShouldIncludeMessage" />
        <!-- Because used for reference only. -->
        <exclude name="MethodReturnsInternalArray" />

        <!-- # important -->
        <exclude name="UseVarargs" />
        <!-- [low priority] << -->

        <!-- ****************************** if possible! ****************************** -->
        <!-- # critical -->
        <exclude name="AccessorMethodGeneration" />
    </rule>

    <!-- # critical -->
    <rule
        ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">
        <properties>
            <!-- Not preferred but had been used already. -->
            <property name="foreachReassign" value="firstOnly" />
            <!-- Not preferred but had been used already. -->
            <property name="forReassign" value="skip" />
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml">
        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="MethodArgumentCouldBeFinal" />
        <exclude name="ShortVariable" />
        <exclude name="LocalVariableCouldBeFinal" />
        <exclude name="OnlyOneReturn" />
        <exclude name="CallSuperInConstructor" />
        <exclude name="CommentDefaultAccessModifier" />
        <exclude name="AtLeastOneConstructor" />
        <exclude name="LongVariable" />
        <exclude name="ShortMethodName" />
        <exclude name="ControlStatementBraces" />
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass" />
        <exclude name="ConfusingTernary" />
        <exclude name="LinguisticNaming" />
        <exclude name="UnnecessaryModifier" />
        <exclude name="DefaultPackage" />
        <exclude name="UseUnderscoresInNumericLiterals" />
        <exclude name="TooManyStaticImports" />
        <exclude name="UseShortArrayInitializer" />

        <!-- # important -->
        <exclude name="UselessParentheses" />
        <exclude name="BooleanGetMethodName" />
        <exclude name="ShortClassName" />

        <!-- [low priority] << -->
    </rule>

    <rule ref="category/java/design.xml">
        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="TooManyMethods" />
        <exclude name="GodClass" />
        <exclude name="TooManyFields" />
        <exclude name="LawOfDemeter" />
        <exclude name="ExcessiveParameterList" />
        <exclude name="ExcessivePublicCount" />
        <exclude name="CyclomaticComplexity" />
        <exclude name="DataClass" />
        <exclude name="ExcessiveImports" />
        <exclude name="CollapsibleIfStatements" />
        <exclude name="SignatureDeclareThrowsException" />
        <exclude name="ImmutableField" />
        <exclude name="SimplifyBooleanReturns" />
        <exclude name="AvoidCatchingGenericException" />
        <exclude name="AvoidUncheckedExceptionsInSignatures" />
        <exclude name="UseUtilityClass" />
        <exclude name="LogicInversion" />
        <exclude name="NPathComplexity" />
        <exclude name="ExcessiveMethodLength" />
        <exclude name="UseObjectForClearerAPI" />
        <exclude name="SimplifiedTernary" />
        <exclude name="NcssCount" />
        <exclude name="AvoidDeeplyNestedIfStmts" />
        <exclude name="ExcessiveClassLength" />
        <exclude name="CouplingBetweenObjects" />
        <exclude name="SwitchDensity" />

        <!-- [low priority] << -->
    </rule>

    <rule ref="category/java/documentation.xml">
        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="UncommentedEmptyConstructor" />
        <exclude name="CommentRequired" />
        <exclude name="CommentSize" />

        <!-- [low priority] << -->
    </rule>

    <rule ref="category/java/errorprone.xml">
        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="AvoidFieldNameMatchingMethodName" />
        <exclude name="MissingSerialVersionUID" />
        <exclude name="AvoidDuplicateLiterals" />
        <exclude name="AvoidCatchingThrowable" />
        <exclude name="AvoidLiteralsInIfCondition" />
        <exclude name="NullAssignment" />
        <exclude name="AvoidFieldNameMatchingTypeName" />
        <exclude name="NonStaticInitializer" />
        <exclude name="BeanMembersShouldSerialize" />

        <!-- [low priority] << -->
    </rule>

    <!-- Partially allow customary rules -->
    <!-- # critical -->
    <rule ref="category/java/errorprone.xml/AssignmentInOperand">
        <properties>
            <property name="allowIf" value="false" />
            <property name="allowFor" value="false" />
            <!-- It is used in readLine traditionally. -->
            <property name="allowWhile" value="true" />
            <property name="allowIncrementDecrement" value="false" />
        </properties>
    </rule>

    <!-- # critical -->
    <rule ref="category/java/multithreading.xml">
        <!-- ****************************** Should be triaged (#586) ****************************** -->
        <exclude name="DoNotUseThreads" />
    </rule>

    <rule ref="category/java/performance.xml">
        <!-- [low priority] >> -->

        <!-- # critical -->
        <exclude name="TooFewBranchesForASwitchStatement" />
        <!-- It is a bug rule. -->
        <exclude name="SimplifyStartsWith" />
        <!-- Is old. Obsolete due to conflict with ConsecutiveAppendsShouldReuse. -->
        <exclude name="ConsecutiveLiteralAppends" />
        <!-- It is a bug rule. -->
        <exclude name="UseIOStreamsWithApacheCommonsFileItem" />

        <!-- [low priority] << -->
    </rule>

    <rule ref="category/java/security.xml" />

    <rule ref="category/jsp/bestpractices.xml">
        <!-- [low priority] >> -->

        <!-- # blocker -->
        <!-- Style is destroyed when applied. -->
        <exclude name="NoClassAttribute" />

        <!-- [low priority] << -->
    </rule>

    <rule ref="category/jsp/codestyle.xml" />

    <rule ref="category/jsp/design.xml">
        <!-- [low priority] >> -->

        <!-- # blocker -->
        <!-- Many include JSTL, and excessive partitioning reduces productivity 
            and communication efficiency. -->
        <exclude name="NoLongScripts" />

        <!-- # critical -->
        <!-- Most of them have low reusability. -->
        <exclude name="NoInlineScript" />

        <!-- [low priority] << -->

        <!-- # critical -->
        <!-- ****************************** Should be triaged (#696) ****************************** -->
        <exclude name="NoScriptlets" />
    </rule>

    <rule ref="category/jsp/documentation.xml" />

    <rule ref="category/jsp/errorprone.xml" />

    <rule ref="category/jsp/multithreading.xml" />

    <rule ref="category/jsp/performance.xml" />

    <rule ref="category/jsp/security.xml">
        <!-- # critical -->
        <!-- *** Escape is applied to required items. #614 *** -->
        <exclude name="NoUnsanitizedJSPExpression" />
    </rule>

</ruleset>
