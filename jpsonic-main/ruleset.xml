<?xml version="1.0"?>
<ruleset name="Jpsonic Custom Rules Priority3"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        PMD 6.30.0 rulesets for Jpsonic.

		[Priority level value controllable by Maven / Logical name in Eclipse plug-in]

        priority 1 / blocker   : Almost follow default rules
        priority 2 / critical  : Almost follow default rules
        priority 3 / urgent    : only important rules
        priority 4 / important : only important rules
        priority 5 / warning   : only important rules

        - There is a rule that is not an error but has an influence on the server operation.
          Purpose is to triage such rules.
        - Rules are expressed as exclusions rather than postscripts.
          Because it is easy to re-evaluate new rules when upgrading PMD.
        - Readability rules in priority 3 are basically discarded. Or postponed.
          Readability rules for priority 1 and 2 are reasonable and should be followed.

    </description>

    <exclude-pattern>.*/.*Test.java</exclude-pattern>
    <exclude-pattern>.*/.*TestData.java</exclude-pattern>
    <exclude-pattern>.*/.*TestUtils.java</exclude-pattern>
    <include-pattern>.*/src/main/java/.*.java</include-pattern>
    <include-pattern>.*/src/main/webapp/WEB-INF/jsp/.*.jsp</include-pattern>

	<!-- Java Rules:Best Practices -->
    <rule ref="category/java/bestpractices.xml">
        <!-- Because currently contains bugs pmd/pmd/issues/2833. -->
        <!-- 3 --><exclude name="UseCollectionIsEmpty" />
        <!-- Because it is a single project and caller is guaranteed. -->
        <!-- 3 --><exclude name="MethodReturnsInternalArray" />
    </rule>

	<!-- Java Rules:Code Style -->
    <rule ref="category/java/codestyle.xml">
        <!-- 3 --><exclude name="MethodArgumentCouldBeFinal" />
        <!-- 3 --><exclude name="ShortVariable" />
        <!-- 3 --><exclude name="LocalVariableCouldBeFinal" />
        <!-- 3 --><exclude name="OnlyOneReturn" />
        <!-- 3 --><exclude name="CallSuperInConstructor" />
        <!-- 3 --><exclude name="CommentDefaultAccessModifier" />
        <!-- 3 --><exclude name="AtLeastOneConstructor" />
        <!-- 3 --><exclude name="LongVariable" />
        <!-- 3 --><exclude name="ShortMethodName" />
        <!-- 3 --><exclude name="ControlStatementBraces" />
        <!-- 3 --><exclude name="FieldDeclarationsShouldBeAtStartOfClass" />
        <!-- 3 --><exclude name="ConfusingTernary" />
        <!-- 3 --><exclude name="LinguisticNaming" />
        <!-- 3 --><exclude name="UnnecessaryModifier" />
        <!-- 3 --><exclude name="DefaultPackage" />
        <!-- 3 --><exclude name="UseUnderscoresInNumericLiterals" />
        <!-- 3 --><exclude name="TooManyStaticImports" />
        <!-- 3 --><exclude name="UseShortArrayInitializer" />
        <!-- 4 --><exclude name="BooleanGetMethodName" />
        <!-- 4 --><exclude name="ShortClassName" />
    </rule>

	<!-- Java Rules:Design -->
    <rule ref="category/java/design.xml">
        <!-- 3 --><exclude name="TooManyMethods" />
        <!-- 3 --><exclude name="GodClass" />
        <!-- 3 --><exclude name="TooManyFields" />
        <!-- 3 --><exclude name="LawOfDemeter" />
        <!-- 3 --><exclude name="ExcessiveParameterList" />
        <!-- 3 --><exclude name="ExcessivePublicCount" />
        <!-- 3 Will be renamed in 7.0 --><exclude name="CyclomaticComplexity" />
        <!-- 3 --><exclude name="DataClass" />
        <!-- 3 --><exclude name="ExcessiveImports" />
        <!-- 3 --><exclude name="CollapsibleIfStatements" />
        <!-- 3 --><exclude name="SignatureDeclareThrowsException" />
        <!-- 3 --><exclude name="ImmutableField" />
        <!-- 3 --><exclude name="SimplifyBooleanReturns" />
        <!-- 3 --><exclude name="AvoidCatchingGenericException" />
        <!-- 3 --><exclude name="AvoidUncheckedExceptionsInSignatures" />
        <!-- 3 --><exclude name="UseUtilityClass" />
        <!-- 3 --><exclude name="LogicInversion" />
        <!-- 3 --><exclude name="NPathComplexity" />
        <!-- 3 --><exclude name="ExcessiveMethodLength" />
        <!-- 3 --><exclude name="UseObjectForClearerAPI" />
        <!-- 3 --><exclude name="SimplifiedTernary" />
        <!-- 3 --><exclude name="NcssCount" />
        <!-- 3 --><exclude name="AvoidDeeplyNestedIfStmts" />
        <!-- 3 --><exclude name="ExcessiveClassLength" />
        <!-- 3 --><exclude name="CouplingBetweenObjects" />
        <!-- 3 --><exclude name="SwitchDensity" />
    </rule>

	<!-- Java Rules:Documentation -->
    <rule ref="category/java/documentation.xml">
        <!-- 3 --><exclude name="UncommentedEmptyConstructor" />
        <!-- 3 --><exclude name="CommentRequired" />
        <!-- 3 --><exclude name="CommentSize" />
    </rule>

	<!-- Java Rules:Error Prone -->
    <rule ref="category/java/errorprone.xml">
        <!-- 3 --><exclude name="AvoidFieldNameMatchingMethodName" />
        <!-- 3 --><exclude name="MissingSerialVersionUID" />
        <!-- 3 --><exclude name="AvoidDuplicateLiterals" />
        <!-- 3 --><exclude name="AvoidCatchingThrowable" />
        <!-- 3 --><exclude name="AvoidLiteralsInIfCondition" />
        <!-- 3 --><exclude name="NullAssignment" />
        <!-- 3 --><exclude name="AvoidFieldNameMatchingTypeName" />
        <!-- 3 --><exclude name="NonStaticInitializer" />
        <!-- 3 --><exclude name="BeanMembersShouldSerialize" />
    </rule>

    <!-- Java Rules:Multithreading -->
    <rule ref="category/java/multithreading.xml">
        <!-- ****************************** Should be triaged (#586) ****************************** -->
        <!-- 3 --><exclude name="DoNotUseThreads" />
    </rule>

	<!-- Java Rules:Performance -->
    <rule ref="category/java/performance.xml">
        <!-- Because there is bug with the rules and it cannot be used. -->
        <!-- 3 --><exclude name="UseIOStreamsWithApacheCommonsFileItem" />
    </rule>

	<!-- Java Rules:Security -->
    <rule ref="category/java/security.xml" />

	<!-- JSP Rules:Best Practices -->
    <rule ref="category/jsp/bestpractices.xml">
        <!-- Style is destroyed when applied. -->
        <!-- 2 --><exclude name="NoClassAttribute" />
    </rule>

	<!-- JSP Rules:Code Style -->
    <rule ref="category/jsp/codestyle.xml" />

	<!-- JSP Rules:Design -->
    <rule ref="category/jsp/design.xml">
        <!-- Many include JSTL, and excessive partitioning reduces productivity and communication efficiency. -->
        <!-- 2 --><exclude name="NoLongScripts" />
        <!-- Most of them have low reusability. -->
        <!-- 3 --><exclude name="NoInlineScript" />
    </rule>

	<!-- JSP Rules:Error Prone -->
    <rule ref="category/jsp/errorprone.xml" />

	<!-- JSP Rules:Security -->
    <rule ref="category/jsp/security.xml">
        <!-- *** Escape is applied to required items. #614 *** -->
        <!-- 3 --><exclude name="NoUnsanitizedJSPExpression" />
    </rule>
</ruleset>
