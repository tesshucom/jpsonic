<?xml version="1.0"?>
<ruleset name="Jpsonic Custom Rules Priority3"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        PMD 6.25.0 rulesets for Jpsonic.
        blocker  (priority1) : Almost follow default rules
        critical (priority2) : Almost follow default rules
        urgent   (priority3) : only important rules

        - There is a rule that is not an error but has an influence on the server operation.
          Purpose is to triage such rules.
        - Rules are expressed as exclusions rather than postscripts.
          It is easy to re-evaluate new rules when upgrading PMD.
        - Readability rules in priority 3 are basically discarded.
          (Readability rules for priority 1 and 2 are reasonable and should be followed.)
    </description>

    <exclude-pattern>.*/.*Test*.java</exclude-pattern>
    <exclude-pattern>.*/.*TestCase*.java</exclude-pattern>
    <exclude-pattern>.*/.*DaoTestCaseBean2.java</exclude-pattern>
    <exclude-pattern>.*/.*TestData*.java</exclude-pattern>
    <exclude-pattern>.*/.*TestUtils*.java</exclude-pattern>
    <include-pattern>.*/src/main/java/.*.java</include-pattern>
    <include-pattern>.*/src/main/webapp/WEB-INF/jsp/.*.jsp</include-pattern>

    <!-- for Java 6.24.0 -->
    <rule ref="category/java/bestpractices.xml">
        <!-- [low priority] >> -->
        <exclude name="MissingOverride" />
        <exclude name="UseCollectionIsEmpty" />
        <exclude name="LooseCoupling" />
        <exclude name="UnusedPrivateField" />
        <exclude name="AccessorClassGeneration" />
        <exclude name="JUnitTestContainsTooManyAsserts" />
        <exclude name="JUnitAssertionsShouldIncludeMessage" />
        <exclude name="MethodReturnsInternalArray" /><!-- Because used for reference only. -->
        <!-- [low priority] << -->

        <exclude name="AccessorMethodGeneration" />                <!-- *** if possible *** -->

    </rule>
    <rule
        ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">
        <properties>
            <!-- Not preferred but had been used already. -->
            <property name="foreachReassign" value="firstOnly" />
            <!-- Not preferred but had been used already. -->
            <property name="forReassign" value="skip" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml">
        <!-- [low priority] >> -->
        <exclude name="MethodArgumentCouldBeFinal" />
        <exclude name="ShortVariable" />
        <exclude name="LocalVariableCouldBeFinal" />
        <exclude name="OnlyOneReturn" />
        <exclude name="CallSuperInConstructor" />
        <exclude name="CommentDefaultAccessModifier" />
        <exclude name="AtLeastOneConstructor" />
        <exclude name="LongVariable" />
        <exclude name="ShortMethodName" />
        <exclude name="ControlStatementBraces" />
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass" />
        <exclude name="ConfusingTernary" />
        <exclude name="LinguisticNaming" />
        <exclude name="UnnecessaryModifier" />
        <exclude name="DefaultPackage" />
        <exclude name="UseUnderscoresInNumericLiterals" />
        <exclude name="TooManyStaticImports" />
        <exclude name="UseShortArrayInitializer" />
        <!-- [low priority] << -->
    </rule>
    <rule ref="category/java/design.xml">
        <!-- [low priority] >> -->
        <exclude name="TooManyMethods" />
        <exclude name="GodClass" />
        <exclude name="TooManyFields" />
        <exclude name="LawOfDemeter" />
        <exclude name="ExcessiveParameterList" />
        <exclude name="ExcessivePublicCount" />
        <exclude name="CyclomaticComplexity" />
        <exclude name="DataClass" />
        <exclude name="ExcessiveImports" />
        <exclude name="CollapsibleIfStatements" />
        <exclude name="SignatureDeclareThrowsException" />
        <exclude name="ImmutableField" />
        <exclude name="SimplifyBooleanReturns" />
        <exclude name="AvoidCatchingGenericException" />
        <exclude name="AvoidUncheckedExceptionsInSignatures" />
        <exclude name="UseUtilityClass" />
        <exclude name="LogicInversion" />
        <exclude name="NPathComplexity" />
        <exclude name="ExcessiveMethodLength" />
        <exclude name="UseObjectForClearerAPI" />
        <exclude name="SimplifiedTernary" />
        <exclude name="NcssCount" />
        <exclude name="AvoidDeeplyNestedIfStmts" />
        <exclude name="ExcessiveClassLength" />
        <exclude name="CouplingBetweenObjects" />
        <exclude name="SwitchDensity" />
        <!-- [low priority] << -->
    </rule>
    <rule ref="category/java/documentation.xml">
        <!-- [low priority] >> -->
        <exclude name="UncommentedEmptyConstructor" />
        <exclude name="CommentRequired" />
        <exclude name="CommentSize" />
        <!-- [low priority] << -->
    </rule>
    <rule ref="category/java/errorprone.xml">
        <!-- [low priority] >> -->
        <exclude name="AvoidFieldNameMatchingMethodName" />
        <exclude name="MissingSerialVersionUID" />
        <exclude name="AvoidDuplicateLiterals" />
        <exclude name="AvoidCatchingThrowable" />
        <exclude name="AvoidLiteralsInIfCondition" />
        <exclude name="NullAssignment" />
        <exclude name="AvoidFieldNameMatchingTypeName" />
        <exclude name="NonStaticInitializer" />
        <exclude name="BeanMembersShouldSerialize" />
        <!-- [low priority] << -->
    </rule>
    <rule ref="category/java/errorprone.xml/AssignmentInOperand"><!-- Partially allow customary rules -->
        <properties>
            <property name="allowIf" value="false" />
            <property name="allowFor" value="false" />
            <property name="allowWhile" value="true" /><!-- It is used in readLine traditionally. -->
            <property name="allowIncrementDecrement" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/multithreading.xml">

        <exclude name="AvoidSynchronizedAtMethodLevel" />       <!-- *** Should be triaged! *** -->
        <exclude name="DoNotUseThreads" />                      <!-- *** Should be triaged! *** -->

    </rule>
    <rule ref="category/java/performance.xml">
        <!-- [low priority] >> -->
        <exclude name="TooFewBranchesForASwitchStatement" />
        <exclude name="SimplifyStartsWith" /><!-- It is a bug rule. -->
        <exclude name="ConsecutiveLiteralAppends" /><!-- Is old. Obsolete due to conflict with ConsecutiveAppendsShouldReuse. -->
        <exclude name="UseIOStreamsWithApacheCommonsFileItem" /><!-- It is a bug rule. -->
        <!-- [low priority] << -->

    </rule>
    <rule ref="category/java/security.xml" />

    <!-- for JSP 6.24.0 -->
    <rule ref="category/jsp/bestpractices.xml">
        <!-- [low priority] >> -->
        <exclude name="NoClassAttribute" /><!-- Style is destroyed when applied. -->
        <!-- [low priority] << -->
    </rule>
    <rule ref="category/jsp/codestyle.xml" />
    <rule ref="category/jsp/design.xml">
        <!-- [low priority] >> -->
        <exclude name="NoLongScripts" /><!-- Many include JSTL, and excessive partitioning reduces productivity. -->
        <exclude name="NoInlineScript" /><!-- Most of them have low reusability. -->
        <!-- [low priority] << -->

        <exclude name="NoInlineStyleInformation" />             <!-- *** if possible *** -->

    </rule>
    <rule ref="category/jsp/documentation.xml" />
    <rule ref="category/jsp/errorprone.xml" />
    <rule ref="category/jsp/multithreading.xml" />
    <rule ref="category/jsp/performance.xml" />
    <rule ref="category/jsp/security.xml">

        <exclude name="NoUnsanitizedJSPExpression" />           <!-- *** Should be triaged! *** -->

    </rule>

</ruleset>
